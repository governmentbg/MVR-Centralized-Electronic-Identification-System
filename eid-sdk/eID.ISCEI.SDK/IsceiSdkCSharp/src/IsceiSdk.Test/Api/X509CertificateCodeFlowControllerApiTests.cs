/*
 * ISCEI HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using IsceiSdk.Client;
using IsceiSdk.Api;
// uncomment below to import models
//using IsceiSdk.Model;

namespace IsceiSdk.Test.Api
{
    /// <summary>
    ///  Class for testing X509CertificateCodeFlowControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class X509CertificateCodeFlowControllerApiTests : IDisposable
    {
        private X509CertificateCodeFlowControllerApi instance;

        public X509CertificateCodeFlowControllerApiTests()
        {
            instance = new X509CertificateCodeFlowControllerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of X509CertificateCodeFlowControllerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' X509CertificateCodeFlowControllerApi
            //Assert.IsType<X509CertificateCodeFlowControllerApi>(instance);
        }

        /// <summary>
        /// Test CodeFlowAuth
        /// </summary>
        [Fact]
        public void CodeFlowAuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string responseType = null;
            //string state = null;
            //string redirectUri = null;
            //string codeChallenge = null;
            //string codeChallengeMethod = null;
            //SignedChallenge signedChallenge = null;
            //List<string> scope = null;
            //var response = instance.CodeFlowAuth(clientId, responseType, state, redirectUri, codeChallenge, codeChallengeMethod, signedChallenge, scope);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test CodeFlowToken
        /// </summary>
        [Fact]
        public void CodeFlowTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string grantType = null;
            //string code = null;
            //string redirectUri = null;
            //string codeVerifier = null;
            //string refreshToken = null;
            //var response = instance.CodeFlowToken(clientId, grantType, code, redirectUri, codeVerifier, refreshToken);
            //Assert.IsType<string>(response);
        }
    }
}
