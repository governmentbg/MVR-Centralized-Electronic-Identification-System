/*
 * ISCEI HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = IsceiSdk.Client.FileParameter;
using OpenAPIDateConverter = IsceiSdk.Client.OpenAPIDateConverter;

namespace IsceiSdk.Model
{
    /// <summary>
    /// SignedChallenge
    /// </summary>
    [DataContract(Name = "SignedChallenge")]
    public partial class SignedChallenge : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SignedChallenge" /> class.
        /// </summary>
        /// <param name="signature">signature.</param>
        /// <param name="challenge">challenge.</param>
        /// <param name="certificate">certificate.</param>
        /// <param name="certificateChain">certificateChain.</param>
        public SignedChallenge(string signature = default, string challenge = default, string certificate = default, List<string> certificateChain = default)
        {
            this.Signature = signature;
            this.Challenge = challenge;
            this.Certificate = certificate;
            this.CertificateChain = certificateChain;
        }

        /// <summary>
        /// Gets or Sets Signature
        /// </summary>
        [DataMember(Name = "signature", EmitDefaultValue = false)]
        public string Signature { get; set; }

        /// <summary>
        /// Gets or Sets Challenge
        /// </summary>
        [DataMember(Name = "challenge", EmitDefaultValue = false)]
        public string Challenge { get; set; }

        /// <summary>
        /// Gets or Sets Certificate
        /// </summary>
        [DataMember(Name = "certificate", EmitDefaultValue = false)]
        public string Certificate { get; set; }

        /// <summary>
        /// Gets or Sets CertificateChain
        /// </summary>
        [DataMember(Name = "certificateChain", EmitDefaultValue = false)]
        public List<string> CertificateChain { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SignedChallenge {\n");
            sb.Append("  Signature: ").Append(Signature).Append("\n");
            sb.Append("  Challenge: ").Append(Challenge).Append("\n");
            sb.Append("  Certificate: ").Append(Certificate).Append("\n");
            sb.Append("  CertificateChain: ").Append(CertificateChain).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
