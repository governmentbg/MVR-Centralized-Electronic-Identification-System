/*
 * eID - PAN Public HTTP API
 *
 * Подсистема за автоматични нотификации (ПАН) Публична
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using PanSdk.Client;
using PanSdk.Api;
// uncomment below to import models
//using PanSdk.Model;

namespace PanSdk.Test.Api
{
    /// <summary>
    ///  Class for testing NotificationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class NotificationsApiTests : IDisposable
    {
        private NotificationsApi instance;

        public NotificationsApiTests()
        {
            instance = new NotificationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NotificationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' NotificationsApi
            //Assert.IsType<NotificationsApi>(instance);
        }

        /// <summary>
        /// Test ApiV1NotificationsDeactivatePost
        /// </summary>
        [Fact]
        public void ApiV1NotificationsDeactivatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Guid> requestBody = null;
            //instance.ApiV1NotificationsDeactivatePost(requestBody);
        }

        /// <summary>
        /// Test ApiV1NotificationsDeactivatedGet
        /// </summary>
        [Fact]
        public void ApiV1NotificationsDeactivatedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //int? pageIndex = null;
            //var response = instance.ApiV1NotificationsDeactivatedGet(pageSize, pageIndex);
            //Assert.IsType<GuidIPaginatedData>(response);
        }

        /// <summary>
        /// Test ApiV1NotificationsGet
        /// </summary>
        [Fact]
        public void ApiV1NotificationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //int? pageIndex = null;
            //string systemName = null;
            //var response = instance.ApiV1NotificationsGet(pageSize, pageIndex, systemName);
            //Assert.IsType<RegisteredSystemResultIPaginatedData>(response);
        }

        /// <summary>
        /// Test RegisterOrUpdateSystemAsync
        /// </summary>
        [Fact]
        public void RegisterOrUpdateSystemAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegisterSystemRequest registerSystemRequest = null;
            //var response = instance.RegisterOrUpdateSystemAsync(registerSystemRequest);
            //Assert.IsType<Guid>(response);
        }

        /// <summary>
        /// Test SendNotificationAsync
        /// </summary>
        [Fact]
        public void SendNotificationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendNotificationRequestInput sendNotificationRequestInput = null;
            //var response = instance.SendNotificationAsync(sendNotificationRequestInput);
            //Assert.IsType<bool>(response);
        }
    }
}
