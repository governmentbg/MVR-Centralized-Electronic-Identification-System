/*
 * eID - PAN Public HTTP API
 *
 * Подсистема за автоматични нотификации (ПАН) Публична
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = PanSdk.Client.FileParameter;
using OpenAPIDateConverter = PanSdk.Client.OpenAPIDateConverter;

namespace PanSdk.Model
{
    /// <summary>
    /// SendNotificationRequestInput
    /// </summary>
    [DataContract(Name = "SendNotificationRequestInput")]
    public partial class SendNotificationRequestInput : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets UidType
        /// </summary>
        [DataMember(Name = "uidType", EmitDefaultValue = false)]
        public IdentifierType? UidType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SendNotificationRequestInput" /> class.
        /// </summary>
        /// <param name="eventCode">eventCode.</param>
        /// <param name="userId">userId.</param>
        /// <param name="eId">eId.</param>
        /// <param name="uid">uid.</param>
        /// <param name="uidType">uidType.</param>
        public SendNotificationRequestInput(string eventCode = default, Guid? userId = default, Guid? eId = default, string uid = default, IdentifierType? uidType = default)
        {
            this.EventCode = eventCode;
            this.UserId = userId;
            this.EId = eId;
            this.Uid = uid;
            this.UidType = uidType;
        }

        /// <summary>
        /// Gets or Sets EventCode
        /// </summary>
        [DataMember(Name = "eventCode", EmitDefaultValue = true)]
        public string EventCode { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name = "userId", EmitDefaultValue = true)]
        public Guid? UserId { get; set; }

        /// <summary>
        /// Gets or Sets EId
        /// </summary>
        [DataMember(Name = "eId", EmitDefaultValue = true)]
        public Guid? EId { get; set; }

        /// <summary>
        /// Gets or Sets Uid
        /// </summary>
        [DataMember(Name = "uid", EmitDefaultValue = true)]
        public string Uid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SendNotificationRequestInput {\n");
            sb.Append("  EventCode: ").Append(EventCode).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  EId: ").Append(EId).Append("\n");
            sb.Append("  Uid: ").Append(Uid).Append("\n");
            sb.Append("  UidType: ").Append(UidType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
