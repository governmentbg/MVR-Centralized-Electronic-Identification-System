/*
 * eID - PAN Public HTTP API
 *
 * Подсистема за автоматични нотификации (ПАН) Публична
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = PanSdk.Client.FileParameter;
using OpenAPIDateConverter = PanSdk.Client.OpenAPIDateConverter;

namespace PanSdk.Model
{
    /// <summary>
    /// RegisterSystemRequest
    /// </summary>
    [DataContract(Name = "RegisterSystemRequest")]
    public partial class RegisterSystemRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RegisterSystemRequest" /> class.
        /// </summary>
        /// <param name="systemName">systemName.</param>
        /// <param name="translations">translations.</param>
        /// <param name="events">events.</param>
        public RegisterSystemRequest(string systemName = default, List<RegisteredSystemTranslationRequest> translations = default, List<SystemEventRequest> events = default)
        {
            this.SystemName = systemName;
            this.Translations = translations;
            this.Events = events;
        }

        /// <summary>
        /// Gets or Sets SystemName
        /// </summary>
        [DataMember(Name = "systemName", EmitDefaultValue = true)]
        public string SystemName { get; set; }

        /// <summary>
        /// Gets or Sets Translations
        /// </summary>
        [DataMember(Name = "translations", EmitDefaultValue = true)]
        public List<RegisteredSystemTranslationRequest> Translations { get; set; }

        /// <summary>
        /// Gets or Sets Events
        /// </summary>
        [DataMember(Name = "events", EmitDefaultValue = true)]
        public List<SystemEventRequest> Events { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RegisterSystemRequest {\n");
            sb.Append("  SystemName: ").Append(SystemName).Append("\n");
            sb.Append("  Translations: ").Append(Translations).Append("\n");
            sb.Append("  Events: ").Append(Events).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
