/*
 * eID - RO HTTP API
 * Регистър на овластяванията (РО)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.CalculatedEmpowermentStatus;
import org.openapitools.client.model.EmpowermentDisagreementResult;
import org.openapitools.client.model.EmpowermentSignatureResult;
import org.openapitools.client.model.EmpowermentStatementStatus;
import org.openapitools.client.model.EmpowermentWithdrawResult;
import org.openapitools.client.model.EmpowermentsDenialReason;
import org.openapitools.client.model.IdentifierType;
import org.openapitools.client.model.OnBehalfOf;
import org.openapitools.client.model.StatusHistoryResult;
import org.openapitools.client.model.UidResult;
import org.openapitools.client.model.VolumeOfRepresentationResult;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eid.sdk.ro.JSON;

/**
 * EmpowermentStatementFromMeResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-11T17:57:54.980305500+03:00[Europe/Kiev]", comments = "Generator version: 7.13.0")
public class EmpowermentStatementFromMeResult {
  public static final String SERIALIZED_NAME_EMPOWERMENT_SIGNATURES = "empowermentSignatures";
  @SerializedName(SERIALIZED_NAME_EMPOWERMENT_SIGNATURES)
  @javax.annotation.Nullable
  private List<EmpowermentSignatureResult> empowermentSignatures;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private UUID id;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  @javax.annotation.Nullable
  private String number;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime expiryDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private EmpowermentStatementStatus status;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  @javax.annotation.Nullable
  private String uid;

  public static final String SERIALIZED_NAME_UID_TYPE = "uidType";
  @SerializedName(SERIALIZED_NAME_UID_TYPE)
  @javax.annotation.Nullable
  private IdentifierType uidType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_ON_BEHALF_OF = "onBehalfOf";
  @SerializedName(SERIALIZED_NAME_ON_BEHALF_OF)
  @javax.annotation.Nullable
  private OnBehalfOf onBehalfOf;

  public static final String SERIALIZED_NAME_AUTHORIZER_UIDS = "authorizerUids";
  @SerializedName(SERIALIZED_NAME_AUTHORIZER_UIDS)
  @javax.annotation.Nullable
  private List<UidResult> authorizerUids;

  public static final String SERIALIZED_NAME_EMPOWERED_UIDS = "empoweredUids";
  @SerializedName(SERIALIZED_NAME_EMPOWERED_UIDS)
  @javax.annotation.Nullable
  private List<UidResult> empoweredUids;

  public static final String SERIALIZED_NAME_PROVIDER_ID = "providerId";
  @SerializedName(SERIALIZED_NAME_PROVIDER_ID)
  @javax.annotation.Nullable
  private String providerId;

  public static final String SERIALIZED_NAME_PROVIDER_NAME = "providerName";
  @SerializedName(SERIALIZED_NAME_PROVIDER_NAME)
  @javax.annotation.Nullable
  private String providerName;

  public static final String SERIALIZED_NAME_SERVICE_ID = "serviceId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  @javax.annotation.Nullable
  private Integer serviceId;

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  @javax.annotation.Nullable
  private String serviceName;

  public static final String SERIALIZED_NAME_VOLUME_OF_REPRESENTATION = "volumeOfRepresentation";
  @SerializedName(SERIALIZED_NAME_VOLUME_OF_REPRESENTATION)
  @javax.annotation.Nullable
  private List<VolumeOfRepresentationResult> volumeOfRepresentation;

  public static final String SERIALIZED_NAME_CREATED_ON = "createdOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  @javax.annotation.Nullable
  private OffsetDateTime createdOn;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  @javax.annotation.Nullable
  private String createdBy;

  public static final String SERIALIZED_NAME_ISSUER_POSITION = "issuerPosition";
  @SerializedName(SERIALIZED_NAME_ISSUER_POSITION)
  @javax.annotation.Nullable
  private String issuerPosition;

  public static final String SERIALIZED_NAME_XML_REPRESENTATION = "xmlRepresentation";
  @SerializedName(SERIALIZED_NAME_XML_REPRESENTATION)
  @javax.annotation.Nullable
  private String xmlRepresentation;

  public static final String SERIALIZED_NAME_DENIAL_REASON = "denialReason";
  @SerializedName(SERIALIZED_NAME_DENIAL_REASON)
  @javax.annotation.Nullable
  private EmpowermentsDenialReason denialReason;

  public static final String SERIALIZED_NAME_EMPOWERMENT_WITHDRAWALS = "empowermentWithdrawals";
  @SerializedName(SERIALIZED_NAME_EMPOWERMENT_WITHDRAWALS)
  @javax.annotation.Nullable
  private List<EmpowermentWithdrawResult> empowermentWithdrawals;

  public static final String SERIALIZED_NAME_EMPOWERMENT_DISAGREEMENTS = "empowermentDisagreements";
  @SerializedName(SERIALIZED_NAME_EMPOWERMENT_DISAGREEMENTS)
  @javax.annotation.Nullable
  private List<EmpowermentDisagreementResult> empowermentDisagreements;

  public static final String SERIALIZED_NAME_STATUS_HISTORY = "statusHistory";
  @SerializedName(SERIALIZED_NAME_STATUS_HISTORY)
  @javax.annotation.Nullable
  private List<StatusHistoryResult> statusHistory;

  public static final String SERIALIZED_NAME_CALCULATED_STATUS_ON = "calculatedStatusOn";
  @SerializedName(SERIALIZED_NAME_CALCULATED_STATUS_ON)
  @javax.annotation.Nullable
  private CalculatedEmpowermentStatus calculatedStatusOn;

  public EmpowermentStatementFromMeResult() {
  }

  public EmpowermentStatementFromMeResult(
     List<EmpowermentSignatureResult> empowermentSignatures
  ) {
    this();
    this.empowermentSignatures = empowermentSignatures;
  }

  /**
   * Get empowermentSignatures
   * @return empowermentSignatures
   */
  @javax.annotation.Nullable
  public List<EmpowermentSignatureResult> getEmpowermentSignatures() {
    return empowermentSignatures;
  }



  public EmpowermentStatementFromMeResult id(@javax.annotation.Nullable UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = id;
  }


  public EmpowermentStatementFromMeResult number(@javax.annotation.Nullable String number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  public String getNumber() {
    return number;
  }

  public void setNumber(@javax.annotation.Nullable String number) {
    this.number = number;
  }


  public EmpowermentStatementFromMeResult startDate(@javax.annotation.Nullable OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(@javax.annotation.Nullable OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public EmpowermentStatementFromMeResult expiryDate(@javax.annotation.Nullable OffsetDateTime expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

  /**
   * Get expiryDate
   * @return expiryDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(@javax.annotation.Nullable OffsetDateTime expiryDate) {
    this.expiryDate = expiryDate;
  }


  public EmpowermentStatementFromMeResult status(@javax.annotation.Nullable EmpowermentStatementStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public EmpowermentStatementStatus getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable EmpowermentStatementStatus status) {
    this.status = status;
  }


  public EmpowermentStatementFromMeResult uid(@javax.annotation.Nullable String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Get uid
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }

  public void setUid(@javax.annotation.Nullable String uid) {
    this.uid = uid;
  }


  public EmpowermentStatementFromMeResult uidType(@javax.annotation.Nullable IdentifierType uidType) {
    this.uidType = uidType;
    return this;
  }

  /**
   * Get uidType
   * @return uidType
   */
  @javax.annotation.Nullable
  public IdentifierType getUidType() {
    return uidType;
  }

  public void setUidType(@javax.annotation.Nullable IdentifierType uidType) {
    this.uidType = uidType;
  }


  public EmpowermentStatementFromMeResult name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public EmpowermentStatementFromMeResult onBehalfOf(@javax.annotation.Nullable OnBehalfOf onBehalfOf) {
    this.onBehalfOf = onBehalfOf;
    return this;
  }

  /**
   * Get onBehalfOf
   * @return onBehalfOf
   */
  @javax.annotation.Nullable
  public OnBehalfOf getOnBehalfOf() {
    return onBehalfOf;
  }

  public void setOnBehalfOf(@javax.annotation.Nullable OnBehalfOf onBehalfOf) {
    this.onBehalfOf = onBehalfOf;
  }


  public EmpowermentStatementFromMeResult authorizerUids(@javax.annotation.Nullable List<UidResult> authorizerUids) {
    this.authorizerUids = authorizerUids;
    return this;
  }

  public EmpowermentStatementFromMeResult addAuthorizerUidsItem(UidResult authorizerUidsItem) {
    if (this.authorizerUids == null) {
      this.authorizerUids = new ArrayList<>();
    }
    this.authorizerUids.add(authorizerUidsItem);
    return this;
  }

  /**
   * Get authorizerUids
   * @return authorizerUids
   */
  @javax.annotation.Nullable
  public List<UidResult> getAuthorizerUids() {
    return authorizerUids;
  }

  public void setAuthorizerUids(@javax.annotation.Nullable List<UidResult> authorizerUids) {
    this.authorizerUids = authorizerUids;
  }


  public EmpowermentStatementFromMeResult empoweredUids(@javax.annotation.Nullable List<UidResult> empoweredUids) {
    this.empoweredUids = empoweredUids;
    return this;
  }

  public EmpowermentStatementFromMeResult addEmpoweredUidsItem(UidResult empoweredUidsItem) {
    if (this.empoweredUids == null) {
      this.empoweredUids = new ArrayList<>();
    }
    this.empoweredUids.add(empoweredUidsItem);
    return this;
  }

  /**
   * Get empoweredUids
   * @return empoweredUids
   */
  @javax.annotation.Nullable
  public List<UidResult> getEmpoweredUids() {
    return empoweredUids;
  }

  public void setEmpoweredUids(@javax.annotation.Nullable List<UidResult> empoweredUids) {
    this.empoweredUids = empoweredUids;
  }


  public EmpowermentStatementFromMeResult providerId(@javax.annotation.Nullable String providerId) {
    this.providerId = providerId;
    return this;
  }

  /**
   * Get providerId
   * @return providerId
   */
  @javax.annotation.Nullable
  public String getProviderId() {
    return providerId;
  }

  public void setProviderId(@javax.annotation.Nullable String providerId) {
    this.providerId = providerId;
  }


  public EmpowermentStatementFromMeResult providerName(@javax.annotation.Nullable String providerName) {
    this.providerName = providerName;
    return this;
  }

  /**
   * Get providerName
   * @return providerName
   */
  @javax.annotation.Nullable
  public String getProviderName() {
    return providerName;
  }

  public void setProviderName(@javax.annotation.Nullable String providerName) {
    this.providerName = providerName;
  }


  public EmpowermentStatementFromMeResult serviceId(@javax.annotation.Nullable Integer serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * Get serviceId
   * @return serviceId
   */
  @javax.annotation.Nullable
  public Integer getServiceId() {
    return serviceId;
  }

  public void setServiceId(@javax.annotation.Nullable Integer serviceId) {
    this.serviceId = serviceId;
  }


  public EmpowermentStatementFromMeResult serviceName(@javax.annotation.Nullable String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   */
  @javax.annotation.Nullable
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(@javax.annotation.Nullable String serviceName) {
    this.serviceName = serviceName;
  }


  public EmpowermentStatementFromMeResult volumeOfRepresentation(@javax.annotation.Nullable List<VolumeOfRepresentationResult> volumeOfRepresentation) {
    this.volumeOfRepresentation = volumeOfRepresentation;
    return this;
  }

  public EmpowermentStatementFromMeResult addVolumeOfRepresentationItem(VolumeOfRepresentationResult volumeOfRepresentationItem) {
    if (this.volumeOfRepresentation == null) {
      this.volumeOfRepresentation = new ArrayList<>();
    }
    this.volumeOfRepresentation.add(volumeOfRepresentationItem);
    return this;
  }

  /**
   * Get volumeOfRepresentation
   * @return volumeOfRepresentation
   */
  @javax.annotation.Nullable
  public List<VolumeOfRepresentationResult> getVolumeOfRepresentation() {
    return volumeOfRepresentation;
  }

  public void setVolumeOfRepresentation(@javax.annotation.Nullable List<VolumeOfRepresentationResult> volumeOfRepresentation) {
    this.volumeOfRepresentation = volumeOfRepresentation;
  }


  public EmpowermentStatementFromMeResult createdOn(@javax.annotation.Nullable OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

  /**
   * Get createdOn
   * @return createdOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(@javax.annotation.Nullable OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }


  public EmpowermentStatementFromMeResult createdBy(@javax.annotation.Nullable String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(@javax.annotation.Nullable String createdBy) {
    this.createdBy = createdBy;
  }


  public EmpowermentStatementFromMeResult issuerPosition(@javax.annotation.Nullable String issuerPosition) {
    this.issuerPosition = issuerPosition;
    return this;
  }

  /**
   * Get issuerPosition
   * @return issuerPosition
   */
  @javax.annotation.Nullable
  public String getIssuerPosition() {
    return issuerPosition;
  }

  public void setIssuerPosition(@javax.annotation.Nullable String issuerPosition) {
    this.issuerPosition = issuerPosition;
  }


  public EmpowermentStatementFromMeResult xmlRepresentation(@javax.annotation.Nullable String xmlRepresentation) {
    this.xmlRepresentation = xmlRepresentation;
    return this;
  }

  /**
   * Get xmlRepresentation
   * @return xmlRepresentation
   */
  @javax.annotation.Nullable
  public String getXmlRepresentation() {
    return xmlRepresentation;
  }

  public void setXmlRepresentation(@javax.annotation.Nullable String xmlRepresentation) {
    this.xmlRepresentation = xmlRepresentation;
  }


  public EmpowermentStatementFromMeResult denialReason(@javax.annotation.Nullable EmpowermentsDenialReason denialReason) {
    this.denialReason = denialReason;
    return this;
  }

  /**
   * Get denialReason
   * @return denialReason
   */
  @javax.annotation.Nullable
  public EmpowermentsDenialReason getDenialReason() {
    return denialReason;
  }

  public void setDenialReason(@javax.annotation.Nullable EmpowermentsDenialReason denialReason) {
    this.denialReason = denialReason;
  }


  public EmpowermentStatementFromMeResult empowermentWithdrawals(@javax.annotation.Nullable List<EmpowermentWithdrawResult> empowermentWithdrawals) {
    this.empowermentWithdrawals = empowermentWithdrawals;
    return this;
  }

  public EmpowermentStatementFromMeResult addEmpowermentWithdrawalsItem(EmpowermentWithdrawResult empowermentWithdrawalsItem) {
    if (this.empowermentWithdrawals == null) {
      this.empowermentWithdrawals = new ArrayList<>();
    }
    this.empowermentWithdrawals.add(empowermentWithdrawalsItem);
    return this;
  }

  /**
   * Get empowermentWithdrawals
   * @return empowermentWithdrawals
   */
  @javax.annotation.Nullable
  public List<EmpowermentWithdrawResult> getEmpowermentWithdrawals() {
    return empowermentWithdrawals;
  }

  public void setEmpowermentWithdrawals(@javax.annotation.Nullable List<EmpowermentWithdrawResult> empowermentWithdrawals) {
    this.empowermentWithdrawals = empowermentWithdrawals;
  }


  public EmpowermentStatementFromMeResult empowermentDisagreements(@javax.annotation.Nullable List<EmpowermentDisagreementResult> empowermentDisagreements) {
    this.empowermentDisagreements = empowermentDisagreements;
    return this;
  }

  public EmpowermentStatementFromMeResult addEmpowermentDisagreementsItem(EmpowermentDisagreementResult empowermentDisagreementsItem) {
    if (this.empowermentDisagreements == null) {
      this.empowermentDisagreements = new ArrayList<>();
    }
    this.empowermentDisagreements.add(empowermentDisagreementsItem);
    return this;
  }

  /**
   * Get empowermentDisagreements
   * @return empowermentDisagreements
   */
  @javax.annotation.Nullable
  public List<EmpowermentDisagreementResult> getEmpowermentDisagreements() {
    return empowermentDisagreements;
  }

  public void setEmpowermentDisagreements(@javax.annotation.Nullable List<EmpowermentDisagreementResult> empowermentDisagreements) {
    this.empowermentDisagreements = empowermentDisagreements;
  }


  public EmpowermentStatementFromMeResult statusHistory(@javax.annotation.Nullable List<StatusHistoryResult> statusHistory) {
    this.statusHistory = statusHistory;
    return this;
  }

  public EmpowermentStatementFromMeResult addStatusHistoryItem(StatusHistoryResult statusHistoryItem) {
    if (this.statusHistory == null) {
      this.statusHistory = new ArrayList<>();
    }
    this.statusHistory.add(statusHistoryItem);
    return this;
  }

  /**
   * Get statusHistory
   * @return statusHistory
   */
  @javax.annotation.Nullable
  public List<StatusHistoryResult> getStatusHistory() {
    return statusHistory;
  }

  public void setStatusHistory(@javax.annotation.Nullable List<StatusHistoryResult> statusHistory) {
    this.statusHistory = statusHistory;
  }


  public EmpowermentStatementFromMeResult calculatedStatusOn(@javax.annotation.Nullable CalculatedEmpowermentStatus calculatedStatusOn) {
    this.calculatedStatusOn = calculatedStatusOn;
    return this;
  }

  /**
   * Get calculatedStatusOn
   * @return calculatedStatusOn
   */
  @javax.annotation.Nullable
  public CalculatedEmpowermentStatus getCalculatedStatusOn() {
    return calculatedStatusOn;
  }

  public void setCalculatedStatusOn(@javax.annotation.Nullable CalculatedEmpowermentStatus calculatedStatusOn) {
    this.calculatedStatusOn = calculatedStatusOn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmpowermentStatementFromMeResult empowermentStatementFromMeResult = (EmpowermentStatementFromMeResult) o;
    return Objects.equals(this.empowermentSignatures, empowermentStatementFromMeResult.empowermentSignatures) &&
        Objects.equals(this.id, empowermentStatementFromMeResult.id) &&
        Objects.equals(this.number, empowermentStatementFromMeResult.number) &&
        Objects.equals(this.startDate, empowermentStatementFromMeResult.startDate) &&
        Objects.equals(this.expiryDate, empowermentStatementFromMeResult.expiryDate) &&
        Objects.equals(this.status, empowermentStatementFromMeResult.status) &&
        Objects.equals(this.uid, empowermentStatementFromMeResult.uid) &&
        Objects.equals(this.uidType, empowermentStatementFromMeResult.uidType) &&
        Objects.equals(this.name, empowermentStatementFromMeResult.name) &&
        Objects.equals(this.onBehalfOf, empowermentStatementFromMeResult.onBehalfOf) &&
        Objects.equals(this.authorizerUids, empowermentStatementFromMeResult.authorizerUids) &&
        Objects.equals(this.empoweredUids, empowermentStatementFromMeResult.empoweredUids) &&
        Objects.equals(this.providerId, empowermentStatementFromMeResult.providerId) &&
        Objects.equals(this.providerName, empowermentStatementFromMeResult.providerName) &&
        Objects.equals(this.serviceId, empowermentStatementFromMeResult.serviceId) &&
        Objects.equals(this.serviceName, empowermentStatementFromMeResult.serviceName) &&
        Objects.equals(this.volumeOfRepresentation, empowermentStatementFromMeResult.volumeOfRepresentation) &&
        Objects.equals(this.createdOn, empowermentStatementFromMeResult.createdOn) &&
        Objects.equals(this.createdBy, empowermentStatementFromMeResult.createdBy) &&
        Objects.equals(this.issuerPosition, empowermentStatementFromMeResult.issuerPosition) &&
        Objects.equals(this.xmlRepresentation, empowermentStatementFromMeResult.xmlRepresentation) &&
        Objects.equals(this.denialReason, empowermentStatementFromMeResult.denialReason) &&
        Objects.equals(this.empowermentWithdrawals, empowermentStatementFromMeResult.empowermentWithdrawals) &&
        Objects.equals(this.empowermentDisagreements, empowermentStatementFromMeResult.empowermentDisagreements) &&
        Objects.equals(this.statusHistory, empowermentStatementFromMeResult.statusHistory) &&
        Objects.equals(this.calculatedStatusOn, empowermentStatementFromMeResult.calculatedStatusOn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(empowermentSignatures, id, number, startDate, expiryDate, status, uid, uidType, name, onBehalfOf, authorizerUids, empoweredUids, providerId, providerName, serviceId, serviceName, volumeOfRepresentation, createdOn, createdBy, issuerPosition, xmlRepresentation, denialReason, empowermentWithdrawals, empowermentDisagreements, statusHistory, calculatedStatusOn);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmpowermentStatementFromMeResult {\n");
    sb.append("    empowermentSignatures: ").append(toIndentedString(empowermentSignatures)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    uidType: ").append(toIndentedString(uidType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    onBehalfOf: ").append(toIndentedString(onBehalfOf)).append("\n");
    sb.append("    authorizerUids: ").append(toIndentedString(authorizerUids)).append("\n");
    sb.append("    empoweredUids: ").append(toIndentedString(empoweredUids)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    providerName: ").append(toIndentedString(providerName)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    volumeOfRepresentation: ").append(toIndentedString(volumeOfRepresentation)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    issuerPosition: ").append(toIndentedString(issuerPosition)).append("\n");
    sb.append("    xmlRepresentation: ").append(toIndentedString(xmlRepresentation)).append("\n");
    sb.append("    denialReason: ").append(toIndentedString(denialReason)).append("\n");
    sb.append("    empowermentWithdrawals: ").append(toIndentedString(empowermentWithdrawals)).append("\n");
    sb.append("    empowermentDisagreements: ").append(toIndentedString(empowermentDisagreements)).append("\n");
    sb.append("    statusHistory: ").append(toIndentedString(statusHistory)).append("\n");
    sb.append("    calculatedStatusOn: ").append(toIndentedString(calculatedStatusOn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("empowermentSignatures");
    openapiFields.add("id");
    openapiFields.add("number");
    openapiFields.add("startDate");
    openapiFields.add("expiryDate");
    openapiFields.add("status");
    openapiFields.add("uid");
    openapiFields.add("uidType");
    openapiFields.add("name");
    openapiFields.add("onBehalfOf");
    openapiFields.add("authorizerUids");
    openapiFields.add("empoweredUids");
    openapiFields.add("providerId");
    openapiFields.add("providerName");
    openapiFields.add("serviceId");
    openapiFields.add("serviceName");
    openapiFields.add("volumeOfRepresentation");
    openapiFields.add("createdOn");
    openapiFields.add("createdBy");
    openapiFields.add("issuerPosition");
    openapiFields.add("xmlRepresentation");
    openapiFields.add("denialReason");
    openapiFields.add("empowermentWithdrawals");
    openapiFields.add("empowermentDisagreements");
    openapiFields.add("statusHistory");
    openapiFields.add("calculatedStatusOn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EmpowermentStatementFromMeResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EmpowermentStatementFromMeResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmpowermentStatementFromMeResult is not found in the empty JSON string", EmpowermentStatementFromMeResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EmpowermentStatementFromMeResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmpowermentStatementFromMeResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("empowermentSignatures") != null && !jsonObj.get("empowermentSignatures").isJsonNull()) {
        JsonArray jsonArrayempowermentSignatures = jsonObj.getAsJsonArray("empowermentSignatures");
        if (jsonArrayempowermentSignatures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("empowermentSignatures").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `empowermentSignatures` to be an array in the JSON string but got `%s`", jsonObj.get("empowermentSignatures").toString()));
          }

          // validate the optional field `empowermentSignatures` (array)
          for (int i = 0; i < jsonArrayempowermentSignatures.size(); i++) {
            EmpowermentSignatureResult.validateJsonElement(jsonArrayempowermentSignatures.get(i));
          };
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("number") != null && !jsonObj.get("number").isJsonNull()) && !jsonObj.get("number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("number").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        EmpowermentStatementStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      // validate the optional field `uidType`
      if (jsonObj.get("uidType") != null && !jsonObj.get("uidType").isJsonNull()) {
        IdentifierType.validateJsonElement(jsonObj.get("uidType"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `onBehalfOf`
      if (jsonObj.get("onBehalfOf") != null && !jsonObj.get("onBehalfOf").isJsonNull()) {
        OnBehalfOf.validateJsonElement(jsonObj.get("onBehalfOf"));
      }
      if (jsonObj.get("authorizerUids") != null && !jsonObj.get("authorizerUids").isJsonNull()) {
        JsonArray jsonArrayauthorizerUids = jsonObj.getAsJsonArray("authorizerUids");
        if (jsonArrayauthorizerUids != null) {
          // ensure the json data is an array
          if (!jsonObj.get("authorizerUids").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `authorizerUids` to be an array in the JSON string but got `%s`", jsonObj.get("authorizerUids").toString()));
          }

          // validate the optional field `authorizerUids` (array)
          for (int i = 0; i < jsonArrayauthorizerUids.size(); i++) {
            UidResult.validateJsonElement(jsonArrayauthorizerUids.get(i));
          };
        }
      }
      if (jsonObj.get("empoweredUids") != null && !jsonObj.get("empoweredUids").isJsonNull()) {
        JsonArray jsonArrayempoweredUids = jsonObj.getAsJsonArray("empoweredUids");
        if (jsonArrayempoweredUids != null) {
          // ensure the json data is an array
          if (!jsonObj.get("empoweredUids").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `empoweredUids` to be an array in the JSON string but got `%s`", jsonObj.get("empoweredUids").toString()));
          }

          // validate the optional field `empoweredUids` (array)
          for (int i = 0; i < jsonArrayempoweredUids.size(); i++) {
            UidResult.validateJsonElement(jsonArrayempoweredUids.get(i));
          };
        }
      }
      if ((jsonObj.get("providerId") != null && !jsonObj.get("providerId").isJsonNull()) && !jsonObj.get("providerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `providerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("providerId").toString()));
      }
      if ((jsonObj.get("providerName") != null && !jsonObj.get("providerName").isJsonNull()) && !jsonObj.get("providerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `providerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("providerName").toString()));
      }
      if ((jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) && !jsonObj.get("serviceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceName").toString()));
      }
      if (jsonObj.get("volumeOfRepresentation") != null && !jsonObj.get("volumeOfRepresentation").isJsonNull()) {
        JsonArray jsonArrayvolumeOfRepresentation = jsonObj.getAsJsonArray("volumeOfRepresentation");
        if (jsonArrayvolumeOfRepresentation != null) {
          // ensure the json data is an array
          if (!jsonObj.get("volumeOfRepresentation").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `volumeOfRepresentation` to be an array in the JSON string but got `%s`", jsonObj.get("volumeOfRepresentation").toString()));
          }

          // validate the optional field `volumeOfRepresentation` (array)
          for (int i = 0; i < jsonArrayvolumeOfRepresentation.size(); i++) {
            VolumeOfRepresentationResult.validateJsonElement(jsonArrayvolumeOfRepresentation.get(i));
          };
        }
      }
      if ((jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) && !jsonObj.get("createdBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdBy").toString()));
      }
      if ((jsonObj.get("issuerPosition") != null && !jsonObj.get("issuerPosition").isJsonNull()) && !jsonObj.get("issuerPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuerPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuerPosition").toString()));
      }
      if ((jsonObj.get("xmlRepresentation") != null && !jsonObj.get("xmlRepresentation").isJsonNull()) && !jsonObj.get("xmlRepresentation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xmlRepresentation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xmlRepresentation").toString()));
      }
      // validate the optional field `denialReason`
      if (jsonObj.get("denialReason") != null && !jsonObj.get("denialReason").isJsonNull()) {
        EmpowermentsDenialReason.validateJsonElement(jsonObj.get("denialReason"));
      }
      if (jsonObj.get("empowermentWithdrawals") != null && !jsonObj.get("empowermentWithdrawals").isJsonNull()) {
        JsonArray jsonArrayempowermentWithdrawals = jsonObj.getAsJsonArray("empowermentWithdrawals");
        if (jsonArrayempowermentWithdrawals != null) {
          // ensure the json data is an array
          if (!jsonObj.get("empowermentWithdrawals").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `empowermentWithdrawals` to be an array in the JSON string but got `%s`", jsonObj.get("empowermentWithdrawals").toString()));
          }

          // validate the optional field `empowermentWithdrawals` (array)
          for (int i = 0; i < jsonArrayempowermentWithdrawals.size(); i++) {
            EmpowermentWithdrawResult.validateJsonElement(jsonArrayempowermentWithdrawals.get(i));
          };
        }
      }
      if (jsonObj.get("empowermentDisagreements") != null && !jsonObj.get("empowermentDisagreements").isJsonNull()) {
        JsonArray jsonArrayempowermentDisagreements = jsonObj.getAsJsonArray("empowermentDisagreements");
        if (jsonArrayempowermentDisagreements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("empowermentDisagreements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `empowermentDisagreements` to be an array in the JSON string but got `%s`", jsonObj.get("empowermentDisagreements").toString()));
          }

          // validate the optional field `empowermentDisagreements` (array)
          for (int i = 0; i < jsonArrayempowermentDisagreements.size(); i++) {
            EmpowermentDisagreementResult.validateJsonElement(jsonArrayempowermentDisagreements.get(i));
          };
        }
      }
      if (jsonObj.get("statusHistory") != null && !jsonObj.get("statusHistory").isJsonNull()) {
        JsonArray jsonArraystatusHistory = jsonObj.getAsJsonArray("statusHistory");
        if (jsonArraystatusHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("statusHistory").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `statusHistory` to be an array in the JSON string but got `%s`", jsonObj.get("statusHistory").toString()));
          }

          // validate the optional field `statusHistory` (array)
          for (int i = 0; i < jsonArraystatusHistory.size(); i++) {
            StatusHistoryResult.validateJsonElement(jsonArraystatusHistory.get(i));
          };
        }
      }
      // validate the optional field `calculatedStatusOn`
      if (jsonObj.get("calculatedStatusOn") != null && !jsonObj.get("calculatedStatusOn").isJsonNull()) {
        CalculatedEmpowermentStatus.validateJsonElement(jsonObj.get("calculatedStatusOn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmpowermentStatementFromMeResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmpowermentStatementFromMeResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmpowermentStatementFromMeResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmpowermentStatementFromMeResult.class));

       return (TypeAdapter<T>) new TypeAdapter<EmpowermentStatementFromMeResult>() {
           @Override
           public void write(JsonWriter out, EmpowermentStatementFromMeResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmpowermentStatementFromMeResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EmpowermentStatementFromMeResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EmpowermentStatementFromMeResult
   * @throws IOException if the JSON string is invalid with respect to EmpowermentStatementFromMeResult
   */
  public static EmpowermentStatementFromMeResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmpowermentStatementFromMeResult.class);
  }

  /**
   * Convert an instance of EmpowermentStatementFromMeResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

