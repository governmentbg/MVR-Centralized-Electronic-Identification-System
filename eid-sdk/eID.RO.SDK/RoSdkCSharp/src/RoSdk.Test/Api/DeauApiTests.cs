/*
 * eID - RO HTTP API
 *
 * Регистър на овластяванията (РО)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using RoSdk.Client;
using RoSdk.Api;
// uncomment below to import models
//using RoSdk.Model;

namespace RoSdk.Test.Api
{
    /// <summary>
    ///  Class for testing DeauApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DeauApiTests : IDisposable
    {
        private DeauApi instance;

        public DeauApiTests()
        {
            instance = new DeauApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DeauApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DeauApi
            //Assert.IsType<DeauApi>(instance);
        }

        /// <summary>
        /// Test ApproveEmpowermentByDeauAsync
        /// </summary>
        [Fact]
        public void ApproveEmpowermentByDeauAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApproveEmpowermentByDeauRequest approveEmpowermentByDeauRequest = null;
            //var response = instance.ApproveEmpowermentByDeauAsync(approveEmpowermentByDeauRequest);
            //Assert.IsType<Guid>(response);
        }

        /// <summary>
        /// Test DenyEmpowermentByDeauAsync
        /// </summary>
        [Fact]
        public void DenyEmpowermentByDeauAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DenyEmpowermentByDeauRequest denyEmpowermentByDeauRequest = null;
            //var response = instance.DenyEmpowermentByDeauAsync(denyEmpowermentByDeauRequest);
            //Assert.IsType<Guid>(response);
        }

        /// <summary>
        /// Test GetEmpowermentsByDeauAsync
        /// </summary>
        [Fact]
        public void GetEmpowermentsByDeauAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEmpowermentsByDeauRequest getEmpowermentsByDeauRequest = null;
            //var response = instance.GetEmpowermentsByDeauAsync(getEmpowermentsByDeauRequest);
            //Assert.IsType<EmpowermentStatementResultIPaginatedData>(response);
        }
    }
}
