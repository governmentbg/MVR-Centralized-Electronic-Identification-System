/*
 * eID - RO HTTP API
 *
 * Регистър на овластяванията (РО)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using RoSdk.Model;
using RoSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace RoSdk.Test.Model
{
    /// <summary>
    ///  Class for testing AddEmpowermentStatementsRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AddEmpowermentStatementsRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AddEmpowermentStatementsRequest
        //private AddEmpowermentStatementsRequest instance;

        public AddEmpowermentStatementsRequestTests()
        {
            // TODO uncomment below to create an instance of AddEmpowermentStatementsRequest
            //instance = new AddEmpowermentStatementsRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AddEmpowermentStatementsRequest
        /// </summary>
        [Fact]
        public void AddEmpowermentStatementsRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" AddEmpowermentStatementsRequest
            //Assert.IsType<AddEmpowermentStatementsRequest>(instance);
        }

        /// <summary>
        /// Test the property 'OnBehalfOf'
        /// </summary>
        [Fact]
        public void OnBehalfOfTest()
        {
            // TODO unit test for the property 'OnBehalfOf'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Uid'
        /// </summary>
        [Fact]
        public void UidTest()
        {
            // TODO unit test for the property 'Uid'
        }

        /// <summary>
        /// Test the property 'UidType'
        /// </summary>
        [Fact]
        public void UidTypeTest()
        {
            // TODO unit test for the property 'UidType'
        }

        /// <summary>
        /// Test the property 'EmpoweredUids'
        /// </summary>
        [Fact]
        public void EmpoweredUidsTest()
        {
            // TODO unit test for the property 'EmpoweredUids'
        }

        /// <summary>
        /// Test the property 'TypeOfEmpowerment'
        /// </summary>
        [Fact]
        public void TypeOfEmpowermentTest()
        {
            // TODO unit test for the property 'TypeOfEmpowerment'
        }

        /// <summary>
        /// Test the property 'ProviderId'
        /// </summary>
        [Fact]
        public void ProviderIdTest()
        {
            // TODO unit test for the property 'ProviderId'
        }

        /// <summary>
        /// Test the property 'ProviderName'
        /// </summary>
        [Fact]
        public void ProviderNameTest()
        {
            // TODO unit test for the property 'ProviderName'
        }

        /// <summary>
        /// Test the property 'ServiceId'
        /// </summary>
        [Fact]
        public void ServiceIdTest()
        {
            // TODO unit test for the property 'ServiceId'
        }

        /// <summary>
        /// Test the property 'ServiceName'
        /// </summary>
        [Fact]
        public void ServiceNameTest()
        {
            // TODO unit test for the property 'ServiceName'
        }

        /// <summary>
        /// Test the property 'IssuerPosition'
        /// </summary>
        [Fact]
        public void IssuerPositionTest()
        {
            // TODO unit test for the property 'IssuerPosition'
        }

        /// <summary>
        /// Test the property 'VolumeOfRepresentation'
        /// </summary>
        [Fact]
        public void VolumeOfRepresentationTest()
        {
            // TODO unit test for the property 'VolumeOfRepresentation'
        }

        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Fact]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }

        /// <summary>
        /// Test the property 'ExpiryDate'
        /// </summary>
        [Fact]
        public void ExpiryDateTest()
        {
            // TODO unit test for the property 'ExpiryDate'
        }

        /// <summary>
        /// Test the property 'AuthorizerUids'
        /// </summary>
        [Fact]
        public void AuthorizerUidsTest()
        {
            // TODO unit test for the property 'AuthorizerUids'
        }
    }
}
