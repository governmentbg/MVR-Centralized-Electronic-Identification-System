/*
 * eID - RO HTTP API
 *
 * Регистър на овластяванията (РО)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = RoSdk.Client.FileParameter;
using OpenAPIDateConverter = RoSdk.Client.OpenAPIDateConverter;

namespace RoSdk.Model
{
    /// <summary>
    /// EmpowermentWithdrawalReasonResult
    /// </summary>
    [DataContract(Name = "EmpowermentWithdrawalReasonResult")]
    public partial class EmpowermentWithdrawalReasonResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmpowermentWithdrawalReasonResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public EmpowermentWithdrawalReasonResult()
        {
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public Guid Id { get; private set; }

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Translations
        /// </summary>
        [DataMember(Name = "translations", EmitDefaultValue = true)]
        public List<EmpowermentWithdrawalReasonTranslationResult> Translations { get; private set; }

        /// <summary>
        /// Returns false as Translations should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeTranslations()
        {
            return false;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EmpowermentWithdrawalReasonResult {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Translations: ").Append(Translations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
