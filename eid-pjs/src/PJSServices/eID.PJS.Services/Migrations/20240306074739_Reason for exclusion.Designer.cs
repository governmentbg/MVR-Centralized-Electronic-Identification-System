// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eID.PJS.Services.Verification;

#nullable disable

namespace eID.PJS.Services.Migrations
{
    [DbContext(typeof(VerificationExclusionsDbContext))]
    [Migration("20240306074739_Reason for exclusion")]
    partial class Reasonforexclusion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("eID.PJS.Services.Verification.PathCheckResult", b =>
                {
                    b.Property<bool>("IsExcluded")
                        .HasColumnType("boolean");

                    b.ToTable("PathCheckResults");
                });

            modelBuilder.Entity("eID.PJS.Services.Verification.VerificationExclusion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExclusionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReasonForExclusion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("Exclusions", (string)null);

                    b.HasDiscriminator<string>("ExclusionType").HasValue("Base");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("eID.PJS.Services.Verification.DateRangeExclusion", b =>
                {
                    b.HasBaseType("eID.PJS.Services.Verification.VerificationExclusion");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasDiscriminator().HasValue("DateRange");
                });

            modelBuilder.Entity("eID.PJS.Services.Verification.FileORFolderExclusion", b =>
                {
                    b.HasBaseType("eID.PJS.Services.Verification.VerificationExclusion");

                    b.Property<string>("ExcludedPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("FileFolder");
                });
#pragma warning restore 612, 618
        }
    }
}
