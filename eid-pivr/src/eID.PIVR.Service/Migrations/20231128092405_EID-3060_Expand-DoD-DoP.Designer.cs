// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eID.PIVR.Service.Database;

#nullable disable

namespace eID.PIVR.Service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231128092405_EID-3060_Expand-DoD-DoP")]
    partial class EID3060_ExpandDoDDoP
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("eID.PIVR.Service.Entities.DateOfDeath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PersonalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UidType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("PersonalId", "CreatedOn")
                        .IsDescending(false, true);

                    b.ToTable("DatesOfDeath", (string)null);
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.DateOfProhibition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescriptionOfProhibition")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PersonalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeOfProhibition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<int>("UidType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("DatesOfProhibition", (string)null);
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.IISDABatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExternal")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdentificationNumber")
                        .IsUnique();

                    b.HasIndex("Name", "IsDeleted");

                    b.ToTable("IISDABatches", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("32810f2f-a366-4ff4-abf2-b75cc931e995"),
                            IdentificationNumber = "0000000061",
                            IsDeleted = false,
                            IsExternal = true,
                            Name = "Министерство на правосъдието",
                            Status = 0
                        });
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.IISDASection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExternal")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Name", "IsDeleted");

                    b.ToTable("IISDASections", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e9df27f-8e06-4384-bfc5-6b884d158245"),
                            IsDeleted = false,
                            IsExternal = true,
                            Name = "Услуги, предоставяни от централни администрации"
                        });
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.IISDAService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)");

                    b.Property<Guid>("IISDABatchId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IISDASectionId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmpowerment")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExternal")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<decimal?>("PaymentInfoNormalCost")
                        .HasColumnType("numeric");

                    b.Property<long>("ServiceNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IISDASectionId");

                    b.HasIndex("IISDABatchId", "ServiceNumber")
                        .IsUnique();

                    b.HasIndex("ServiceNumber", "Name", "IsEmpowerment", "IsDeleted");

                    b.ToTable("IISDAServices", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("01951076-86fc-4d81-ba09-12158825a98f"),
                            Description = "Чуждестранни физически лица, които не са граждани на държава член на Европейския съюз и нямат постоянно пребиваване в Република България, имат право да извършват дейност с нестопанска цел на територията на Република България чрез юридическо лице с нестопанска цел в обществена полза",
                            IISDABatchId = new Guid("32810f2f-a366-4ff4-abf2-b75cc931e995"),
                            IISDASectionId = new Guid("7e9df27f-8e06-4384-bfc5-6b884d158245"),
                            IsDeleted = false,
                            IsEmpowerment = false,
                            IsExternal = true,
                            Name = "Издаване на разрешение за извършване на дейност с нестопанска цел от чужденци в Република България",
                            PaymentInfoNormalCost = 20m,
                            ServiceNumber = 316L
                        });
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.ServiceScope", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IISDAServiceId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.HasKey("Id");

                    b.HasIndex("IISDAServiceId", "Code")
                        .IsUnique();

                    b.HasIndex("IISDAServiceId", "Name")
                        .IsUnique();

                    b.ToTable("ServiceScopes", (string)null);
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.IISDAService", b =>
                {
                    b.HasOne("eID.PIVR.Service.Entities.IISDABatch", "IISDABatch")
                        .WithMany("IISDAServices")
                        .HasForeignKey("IISDABatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eID.PIVR.Service.Entities.IISDASection", "IISDASection")
                        .WithMany("IISDAServices")
                        .HasForeignKey("IISDASectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IISDABatch");

                    b.Navigation("IISDASection");
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.ServiceScope", b =>
                {
                    b.HasOne("eID.PIVR.Service.Entities.IISDAService", "IISDAService")
                        .WithMany("ServiceScopes")
                        .HasForeignKey("IISDAServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IISDAService");
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.IISDABatch", b =>
                {
                    b.Navigation("IISDAServices");
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.IISDASection", b =>
                {
                    b.Navigation("IISDAServices");
                });

            modelBuilder.Entity("eID.PIVR.Service.Entities.IISDAService", b =>
                {
                    b.Navigation("ServiceScopes");
                });
#pragma warning restore 612, 618
        }
    }
}
