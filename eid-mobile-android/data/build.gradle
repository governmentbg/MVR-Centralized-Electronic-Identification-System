/**
 * Please follow code style when editing project
 * Please follow principles of clean architecture
 * Created 2023 by Roman Kryvolapov
 **/

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jetbrains.kotlin.plugin.parcelize'
    id 'com.google.devtools.ksp'
}

Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

android {

    namespace = 'com.digitall.eid.data'

    compileSdk = 36

    defaultConfig {
        minSdk = 24
        targetSdk = 36
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlin {
        jvmToolchain(17)
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        debug {
            minifyEnabled = false
            jniDebuggable = true
        }

        release {
            minifyEnabled = true
            jniDebuggable = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += "version"

    /**
     * sensitive data should be stored in local.properties
     * this data should not be in a shared repository
     * contact the project administrator to obtain this data
     * data in local.properties must be in the format key=value in lowercase
     * make sure local.properties is in gitignore
     **/

    productFlavors {
        environmentTest {
            buildConfigField 'String', 'CLIENT_SECRET_AUTH', "\"" + properties['client_secret_auth'] + "\""
            buildConfigField 'String', 'CLIENT_SECRET_MPOZEI', "\"" + properties['client_secret_mpozei'] + "\""
            buildConfigField 'String', 'GRANT_TYPE_AUTH', "\"" + properties['grant_type_auth'] + "\""
            buildConfigField 'String', 'CLIENT_ID', "\"" + properties['client_id'] + "\""
            buildConfigField 'String', 'CLIENT_ID_MPOZEI', "\"" + properties['client_id_mpozei'] + "\""
        }
        environmentRelease {
            buildConfigField 'String', 'CLIENT_SECRET_AUTH', "\"" + properties['client_secret_auth'] + "\""
            buildConfigField 'String', 'CLIENT_SECRET_MPOZEI', "\"" + properties['client_secret_mpozei'] + "\""
            buildConfigField 'String', 'GRANT_TYPE_AUTH', "\"" + properties['grant_type_auth'] + "\""
            buildConfigField 'String', 'CLIENT_ID', "\"" + properties['client_id'] + "\""
            buildConfigField 'String', 'CLIENT_ID_MPOZEI', "\"" + properties['client_id_mpozei'] + "\""
        }
        configureEach {
            dimension "version"
            buildConfigField 'String', 'DATABASE_NAME', "\"" + properties['database_name'] + "\""
            buildConfigField 'String', 'ENCRYPTED_SHARED_PREFERENCES_NAME', "\"" + properties['encrypted_shared_preferences_name'] + "\""
            buildConfigField 'String', 'PROPERTY_USER_PASSWORD', "\"" + properties['property_user_password'] + "\""
            buildConfigField 'String', 'EVROTRUST_APPLICATION_NUMBER', "\"" + properties['evrotrust_application_number'] + "\""
            buildConfigField 'String', 'PROPERTY_KEY_PIN_CODE', "\"" + properties['property_key_pin_code'] + "\""
            buildConfigField 'String', 'PROPERTY_KEY_APP_LANGUAGE', "\"" + properties['property_key_app_language'] + "\""
            buildConfigField 'String', 'PROPERTY_KEY_APP_ENVIRONMENT', "\"" + properties['property_key_app_environment'] + "\""
            buildConfigField 'String', 'PROPERTY_KEY_APP_PIN', "\"" + properties['property_key_app_pin'] + "\""
            buildConfigField 'String', 'PROPERTY_KEY_APP_PIN_PROMPT', "\"" + properties['property_key_app_pin_prompt'] + "\""
            buildConfigField 'String', 'PROPERTY_KEY_APP_CREDENTIALS', "\"" + properties['property_key_app_credentials'] + "\""
            buildConfigField 'String', 'PROPERTY_KEY_BIOMETRICS_ENABLED_FOR_UNLOCK', "\"" + properties['property_key_biometrics_enabled_for_unlock'] + "\""
            buildConfigField 'String', 'ANDROID_KEYSTORE', "\"" + properties['android_keystore'] + "\""
            buildConfigField 'String', 'MASTER_SYMMETRIC_KEY_ALIAS', "\"" + properties['master_symmetric_key_alias'] + "\""
            buildConfigField 'String', 'BIOMETRIC_KEY_ALIAS', "\"" + properties['biometric_key_alias'] + "\""
            buildConfigField 'String', 'MASTER_PREFERENCES_KEY_ALIAS', "\"" + properties['master_preferences_key_alias'] + "\""
            buildConfigField 'String', 'MASTER_PREFERENCES_ENCRYPTION_KEY_ALIAS', "\"" + properties['master_preferences_encryption_key_alias'] + "\""
            buildConfigField 'String', 'PROPERTY_KEY_FIREBASE_TOKEN', "\"" + properties['property_key_firebase_token_eid'] + "\""
        }
    }

    packaging {
        resources.excludes.add("META-INF/**")
    }
}

configurations {
    all*.exclude module: 'bcprov-jdk15on'
    all*.exclude module: 'bcpkix-jdk15on'
}

dependencies {
    implementation project(':domain')

    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'com.google.code.gson:gson:2.13.1'

    // database
    implementation 'androidx.room:room-runtime:2.7.2'
    ksp 'androidx.room:room-compiler:2.7.2'
    implementation 'androidx.room:room-ktx:2.7.2'
    implementation 'net.zetetic:android-database-sqlcipher:4.5.4'
    implementation 'androidx.sqlite:sqlite-ktx:2.5.2'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:3.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:3.0.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.1.0'
    implementation platform('com.squareup.okhttp3:okhttp-bom:5.1.0')
    implementation 'com.squareup.okhttp3:okhttp:5.1.0'
    implementation 'com.squareup.retrofit2:converter-simplexml:3.0.0'

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'

    //  di
    implementation 'io.insert-koin:koin-android:4.1.0'

    // security

    // common
    implementation 'javax.inject:javax.inject:1'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    kapt 'org.mapstruct:mapstruct-processor:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'
    implementation 'org.simpleframework:simple-xml:2.7.1'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.81'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.81'

    // tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.insert-koin:koin-test:4.1.0'
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation 'io.insert-koin:koin-test-junit4:4.1.0'
    testImplementation 'org.mockito:mockito-core:5.18.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:6.0.0'

}