schemas:
  ForgottenPasswordDTO:
    type: object
    properties:
      firstName:
        type: string
        x-field-extra-annotation: '@jakarta.validation.constraints.NotBlank(message = bg.bulsi.mvr.common.exception.ErrorCode.Fields.FIRST_NAME_CANNOT_BE_BLANK) 
        @jakarta.validation.constraints.Pattern(regexp = bg.bulsi.mvr.common.util.RegexUtil.FIRST_OR_SECOND_NAME_REGEX, message = bg.bulsi.mvr.common.exception.ErrorCode.Fields.FIRST_NAME_NOT_VALID) '
        description: First Name
      secondName:
        type: string
        x-field-extra-annotation: '
         @jakarta.validation.constraints.Pattern(regexp = bg.bulsi.mvr.common.util.RegexUtil.FIRST_OR_SECOND_NAME_REGEX, message = bg.bulsi.mvr.common.exception.ErrorCode.Fields.SECOND_NAME_NOT_VALID) '
        description: Second Name
      lastName:
        type: string
        x-field-extra-annotation: '
        @jakarta.validation.constraints.Pattern(regexp = bg.bulsi.mvr.common.util.RegexUtil.LAST_NAME_REGEX, message = bg.bulsi.mvr.common.exception.ErrorCode.Fields.LAST_NAME_NOT_VALID) '
        description: Last Name
      email:
        type: string
        x-field-extra-annotation: '@jakarta.validation.constraints.NotBlank(message = bg.bulsi.mvr.common.exception.ErrorCode.Fields.EMAIL_CANNOT_BE_BLANK) 
        @jakarta.validation.constraints.Pattern(regexp = bg.bulsi.mvr.common.util.RegexUtil.EMAIL_REGEX, message = bg.bulsi.mvr.common.exception.ErrorCode.Fields.EMAIL_NOT_VALID) '