
package bg.bulsi.mvr.mpozei.backend.soap_impl;

import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "DataPreparationService", targetNamespace = "services.dp.tidis.muehlbauer.de", wsdlLocation = "http://nexus.mvreid.local:8081/repository/maven-releases/data%2Fservice%2F1%2Fservice-1.wsdl")
public class DataPreparationService
    extends Service
{

    private static final URL DATAPREPARATIONSERVICE_WSDL_LOCATION;
    private static final WebServiceException DATAPREPARATIONSERVICE_EXCEPTION;
    private static final QName DATAPREPARATIONSERVICE_QNAME = new QName("services.dp.tidis.muehlbauer.de", "DataPreparationService");

    static {
        URL url = null;
        WebServiceException e = null;
//        try {
//            url = new URL("http://nexus.mvreid.local:8081/repository/maven-releases/data%2Fservice%2F1%2Fservice-1.wsdl");
//        } catch (MalformedURLException ex) {
//            e = new WebServiceException(ex);
//        }
        DATAPREPARATIONSERVICE_WSDL_LOCATION = url;
        DATAPREPARATIONSERVICE_EXCEPTION = e;
    }

    public DataPreparationService() {
        super(__getWsdlLocation(), DATAPREPARATIONSERVICE_QNAME);
    }

    public DataPreparationService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DATAPREPARATIONSERVICE_QNAME, features);
    }

    public DataPreparationService(URL wsdlLocation) {
        super(wsdlLocation, DATAPREPARATIONSERVICE_QNAME);
    }

    public DataPreparationService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DATAPREPARATIONSERVICE_QNAME, features);
    }

    public DataPreparationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DataPreparationService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DataPreparationIfc
     */
    @WebEndpoint(name = "DataPreparationWebserviceSoap11Port")
    public DataPreparationIfc getDataPreparationWebserviceSoap11Port() {
        return super.getPort(new QName("services.dp.tidis.muehlbauer.de", "DataPreparationWebserviceSoap11Port"), DataPreparationIfc.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataPreparationIfc
     */
    @WebEndpoint(name = "DataPreparationWebserviceSoap11Port")
    public DataPreparationIfc getDataPreparationWebserviceSoap11Port(WebServiceFeature... features) {
        return super.getPort(new QName("services.dp.tidis.muehlbauer.de", "DataPreparationWebserviceSoap11Port"), DataPreparationIfc.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DATAPREPARATIONSERVICE_EXCEPTION!= null) {
            throw DATAPREPARATIONSERVICE_EXCEPTION;
        }
        return DATAPREPARATIONSERVICE_WSDL_LOCATION;
    }

}
